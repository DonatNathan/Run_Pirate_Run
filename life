        if (my_game->event.type == sfEvtMouseButtonReleased)
        if (my_game->event.type == sfEvtMouseButtonReleased)
            play_game(my_pause, my_game, my_game->my_s);
        if (my_game->event.type == sfEvtMouseButtonReleased)
            open_menu(my_game->window, my_game->life);
    my_game->clock = sfClock_create();
    my_game->window = window;
    my_game->event = event;
    my_game->time_action = 0;
    my_game->cmpt_move = 0;
    my_game->action = 0;
    my_game->pirate = 3;
    my_game->time = sfClock_getElapsedTime(my_game->clock);
    my_game->secs = my_game->time.microseconds / 5000.0;
    sfRenderWindow_drawSprite(my_game->window, my_end->my_back, sfFalse);
    sfRenderWindow_drawSprite(my_game->window, my_end->s_quit, sfFalse);
    sfRenderWindow_drawSprite(my_game->window, my_end->s_restart, sfFalse);
    sfRenderWindow_drawText(my_game->window, my_end->score, sfFalse);
    sfRenderWindow_drawText(my_game->window, my_end->quit, sfFalse);
    sfRenderWindow_drawText(my_game->window, my_end->restart, sfFalse);
    sfRenderWindow_drawText(my_game->window, my_end->result, sfFalse);
    sfVector2i mouse_position = sfMouse_getPosition((sfWindow *) my_game->window);
        if (my_game->event.type == sfEvtMouseButtonReleased)
            sfRenderWindow_close(my_game->window);
        if (my_game->event.type == sfEvtMouseButtonReleased)
    while (sfRenderWindow_pollEvent(my_game->window, &my_game->event)) {
        if (my_game->event.type == sfEvtClosed)
            sfRenderWindow_close(my_game->window);
            sfRenderWindow_close(my_game->window);
        sfSound_play(my_game->my_s->win);
        sfSound_play(my_game->my_s->lose);
    while (sfRenderWindow_isOpen(my_game->window)) {
        sfRenderWindow_display(my_game->window);
        check_end(my_end, my_game, my_pause, my_game->my_s);
        if (my_game->event.type == sfEvtMouseButtonReleased) {
            my_game->level = 1;
            play_game(my_pause, my_game, my_game->my_s);
        if (my_game->event.type == sfEvtMouseButtonReleased) {
            my_game->level = 2;
            play_game(my_pause, my_game, my_game->my_s);
    my_printf("Life : %d", my_game->life);
        my_game->life -= 10;
    if (my_game->life <= 0) {
    sfVector2i mouse_position = sfMouse_getPosition((sfWindow *) my_game->window);
    while (sfRenderWindow_pollEvent(my_game->window, &my_game->event)) {
        if (my_game->event.type == sfEvtClosed || sfKeyboard_isKeyPressed(sfKeyQ) || \
&& mouse_position.y < my_menu->pose_button_q.y + 190 && my_game->event.type == \
            sfRenderWindow_close(my_game->window);
my_menu->pose_button_p.y + 190 && my_game->event.type == sfEvtMouseButtonReleased)) {
    if (my_game->action == 1) {
        if (my_game->secs <= 100)
        if (my_game->secs >= 100)
    else if (my_game->action == 2) {
        if (my_game->secs <= 100)
    if (my_game->secs >= my_game->time_action + 200)
    my_game->time_action = 0;
    my_game->action = 0;
    sfClock_restart(my_game->clock);
    my_game->time = sfClock_getElapsedTime(my_game->clock);
    my_game->secs = my_game->time.microseconds / 5000.0;
    my_game->time_action = my_game->secs;
    my_game->action = 1;
    sfClock_restart(my_game->clock);
    my_game->time = sfClock_getElapsedTime(my_game->clock);
    my_game->secs = my_game->time.microseconds / 5000.0;
    my_game->time_action = my_game->secs;
    my_game->action = 2;
    if (my_game->level == 1) {
    sfVector2i mouse_position = sfMouse_getPosition((sfWindow *) my_game->window);
    while (sfRenderWindow_pollEvent(my_game->window, &my_game->event)) {
        if (my_game->event.type == sfEvtClosed)
            sfRenderWindow_close(my_game->window);
        if ((mouse_position.x > 1270 && mouse_position.x <= 1330 && mouse_position.y > 270 && mouse_position.y <= 320 && my_game->event.type == sfEvtMouseButtonReleased) || (mouse_position.x > 1800 && mouse_position.x <= 1890 && mouse_position.y > 20 && mouse_position.y <= 110 && my_game->event.type == sfEvtMouseButtonReleased) || sfKeyboard_isKeyPressed(sfKeyC))
            play_game(my_pause, my_game, my_game->my_s);
            open_menu(my_game->window, my_pause->life);
    sfMouse_setPosition(mouse_pause, (sfWindow *) my_game->window);
    while (sfRenderWindow_isOpen(my_game->window) && in_pause == 0) {
        draw_pause(my_pause, my_game->window);
        sfRenderWindow_display(my_game->window);
    while (sfRenderWindow_pollEvent(my_game->window, &my_game->event)) {
        if (my_game->event.type == sfEvtClosed)
            sfRenderWindow_close(my_game->window);
        if (sfKeyboard_isKeyPressed(sfKeyUp) && my_game->action == 0) {
            sfSound_play(my_game->my_s->jump);
        if (sfKeyboard_isKeyPressed(sfKeySpace) && my_game->action == 0) {
            sfSound_play(my_game->my_s->punch);
    my_game->my_s = my_sounds;
    my_game->life = my_pause->life;
    while (sfRenderWindow_isOpen(my_game->window)) {
        check_position(my_back, my_game->window);
        sfRenderWindow_clear(my_game->window, sfBlack);
        draw_parallax(my_back, my_game->window);
        draw_score(my_score, my_game->window, my_pause->score, my_pause);
        sfRenderWindow_drawSprite(my_game->window, my_pirate->s_runner, NULL);
        draw_map(my_game->window, my_map, map);
        sfRenderWindow_display(my_game->window);
        if (my_game->event.type == sfEvtMouseButtonReleased) {
            my_game->pirate = 3;
        if (my_game->event.type == sfEvtMouseButtonReleased) {
            my_game->pirate = 2;
        if (my_game->event.type == sfEvtMouseButtonReleased) {
            my_game->pirate = 1;
                                                    my_game->window);
    while (sfRenderWindow_pollEvent(my_game->window, &my_game->event)) {
            my_game->level = 1;
            my_game->level = 2;
        if (my_game->event.type == sfEvtClosed)
            sfRenderWindow_close(my_game->window);
            open_menu(my_game->window, my_game->life);
    while (sfRenderWindow_isOpen(my_game->window)) {
        sfRenderWindow_clear(my_game->window, sfBlack);
        draw_choices(my_game->window, my_choices);
        sfRenderWindow_display(my_game->window);
    sfClock_destroy(my_game->clock);
    if (my_game->secs > my_game->cmpt_move) {
        my_game->cmpt_move += 15;
    if (my_game->secs >= 200) {
        sfClock_restart(my_game->clock);
        my_game->cmpt_move = 0;
    if (my_game->pirate == 1) {
    } else if (my_game->pirate == 2) {
